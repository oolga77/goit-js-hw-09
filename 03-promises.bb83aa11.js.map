{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACbC,SAAUC,SAASC,cAAc,SACjCC,WAAYF,SAASC,cAAc,oBACnCE,UAAWH,SAASC,cAAc,mBAClCG,YAAaJ,SAASK,kBAAkB,qBACxCC,iBAAkBN,SAASC,cAAc,wBAOzC,SAASM,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAExC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAdLX,EAAKQ,iBAAiBW,iBAAiB,UAAU,SAAAC,GAC/CA,EAAIC,gB,IAiBNrB,EAAKQ,iBAAiBW,iBAAiB,SAGvC,WAOE,IAJA,IAAIG,EAAQC,OAAOvB,EAAKI,WAAWoB,OAC/BC,EAAOF,OAAOvB,EAAKK,UAAUmB,OAC7BE,EAASH,OAAOvB,EAAKM,YAAYkB,OAE5BG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGL,GACdM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBb,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC3DsB,QAAMC,IAAI,uBAAwCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DwB,OAAM,SAAAN,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBb,EAAAgC,OAAOM,QAAQ,sBAAuCJ,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC1DsB,QAAMC,IAAI,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE3DW,GAASG,EAIbzB,EAAKC,SAASoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\nformData: document.querySelector('.form'),\nfirstDelay: document.querySelector('[name = \"delay\"]'),\ndelayStep: document.querySelector('[name = \"step\"]'),\ndelayAmount: document.getElementsByName('[name = \"amount\"]'),\nbtnCreatePromise: document.querySelector('button[type=submit]')\n}\n\nrefs.btnCreatePromise.addEventListener('submit', evt => {\n  evt.preventDefault();\n})\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\nreturn new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n});\n};\n\nrefs.btnCreatePromise.addEventListener('click', onSubmit);\n\n\nfunction onSubmit(){\n \n\n  let delay = Number(refs.firstDelay.value);\n  let step = Number(refs.delayStep.value);\n  let amount = Number(refs.delayAmount.value);\n\n  for (let i = 0; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  \n  \nrefs.formData.reset();\n}\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formData","document","querySelector","firstDelay","delayStep","delayAmount","getElementsByName","btnCreatePromise","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","param","Notify","success","concat","console","log","catch","failure","reset"],"version":3,"file":"03-promises.bb83aa11.js.map"}