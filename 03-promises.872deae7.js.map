{"mappings":"gfAAC,IAAAA,EAAAC,EAAA,SACMC,EAAO,CACZC,SAAUC,SAASC,cAAc,SACjCC,WAAYF,SAASC,cAAc,gBACnCE,UAAWH,SAASC,cAAc,eAClCG,YAAaJ,SAASC,cAAc,iBACpCI,kBAAmBL,SAASC,cAAc,kBAwB5C,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA/BLV,EAAKO,kBAAkBW,iBAAiB,SAAS,SAAAC,GACjDA,EAAMC,iBAKJ,IAHA,IAAIC,EAAQC,OAAOtB,EAAKI,WAAWmB,OAC/BC,EAAYF,OAAOtB,EAAKK,UAAUkB,OAClCE,EAAcH,OAAOtB,EAAKM,YAAYiB,OACjCG,EAAW,EAAGA,GAAYD,EAAaC,IAC9ClB,EAAckB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBZ,EAAA+B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG9DsB,OAAM,SAAAJ,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBZ,EAAA+B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAG9DW,GAASG,EAEXxB,EAAKC,SAASiC,O","sources":["src/js/03-promises.js"],"sourcesContent":[" import { Notify } from 'notiflix';\n const refs = {\n  formData: document.querySelector('.form'),\n  firstDelay: document.querySelector('[name=delay]'),\n  stepDelay: document.querySelector('[name=step]'),\n  amountDelay: document.querySelector('[name=amount]'),\n  createPromiseeBtn: document.querySelector('[type=submit]'),\n}\n\n  refs.createPromiseeBtn.addEventListener('click', event => {\n  event.preventDefault();\n  \n    let delay = Number(refs.firstDelay.value);\n    let delayStep = Number(refs.stepDelay.value);\n    let delayAmount = Number(refs.amountDelay.value);\n    for (let position = 1; position <= delayAmount; position++) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          \n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          \n        });\n      delay += delayStep;\n    }\n    refs.formData.reset();\n  });\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","formData","document","querySelector","firstDelay","stepDelay","amountDelay","createPromiseeBtn","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","delayStep","delayAmount","position1","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.872deae7.js.map"}