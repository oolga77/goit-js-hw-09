{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACbC,SAAUC,SAASC,cAAc,SACjCC,WAAYF,SAASC,cAAc,oBACnCE,UAAWH,SAASC,cAAc,mBAClCG,YAAaJ,SAASK,kBAAkB,qBACxCC,iBAAkBN,SAASC,cAAc,wBAOzC,SAASM,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAExC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAdXX,EAAKQ,iBAAiBW,iBAAiB,UAAUC,IAC/CA,EAAIC,gBAAgB,IAiBtBrB,EAAKQ,iBAAiBW,iBAAiB,SAGvC,WAGE,IAAIG,EAAQC,OAAOvB,EAAKI,WAAWoB,OAC/BC,EAAOF,OAAOvB,EAAKK,UAAUmB,OAC7BE,EAASH,OAAOvB,EAAKM,YAAYkB,OAErC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAC3BlB,EAAckB,EAAGL,GACdM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBb,EAAA+B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,OACnDoB,QAAMC,IAAI,uBAAqBtB,QAAiBC,MAAU,IAE7DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBb,EAAA+B,OAAOK,QAAQ,sBAAoBxB,QAAiBC,OAClDoB,QAAMC,IAAI,sBAAoBtB,QAAeC,MAAU,IAE7DW,GAASG,EAIbzB,EAAKC,SAASkC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\nformData: document.querySelector('.form'),\nfirstDelay: document.querySelector('[name = \"delay\"]'),\ndelayStep: document.querySelector('[name = \"step\"]'),\ndelayAmount: document.getElementsByName('[name = \"amount\"]'),\nbtnCreatePromise: document.querySelector('button[type=submit]')\n}\n\nrefs.btnCreatePromise.addEventListener('submit', evt => {\n  evt.preventDefault();\n})\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\nreturn new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  }, delay);\n});\n};\n\nrefs.btnCreatePromise.addEventListener('click', onSubmit);\n\n\nfunction onSubmit(){\n \n\n  let delay = Number(refs.firstDelay.value);\n  let step = Number(refs.delayStep.value);\n  let amount = Number(refs.delayAmount.value);\n\n  for (let i = 0; i <= amount; i++) {\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay += step;\n  }\n  \n  \nrefs.formData.reset();\n}\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","formData","document","querySelector","firstDelay","delayStep","delayAmount","getElementsByName","btnCreatePromise","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","evt","preventDefault","delay1","Number","value","step","amount","i","then","Notify","success","console","log","catch","failure","reset"],"version":3,"file":"03-promises.dafbf54b.js.map"}